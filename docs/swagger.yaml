basePath: /api
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  internal_entities_auth.Auth:
    properties:
      code:
        example: "1234"
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        example: user@example.com
        type: string
      id:
        example: 1
        type: integer
      phone:
        example: "+79123456789"
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  internal_entities_auth.AuthEmailConfirmRequest:
    properties:
      code:
        example: "1234"
        type: string
      email:
        example: user@example.com
        type: string
    required:
    - code
    - email
    type: object
  internal_entities_auth.AuthEmailRequest:
    properties:
      email:
        example: user@example.com
        type: string
    required:
    - email
    type: object
  internal_entities_auth.AuthResponse:
    properties:
      access:
        type: string
      refresh:
        type: string
      user:
        $ref: '#/definitions/internal_entities_auth.UserInfo'
    type: object
  internal_entities_auth.UserInfo:
    properties:
      email:
        example: user@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Иван Иванов
        type: string
      phone:
        example: "+79123456789"
        type: string
    type: object
  internal_entities_user.User:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        example: user@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Иван Иванов
        type: string
      phone:
        example: "+79123456789"
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  internal_entities_user.UserAllResponse:
    properties:
      count:
        example: 10
        type: integer
      users:
        items:
          $ref: '#/definitions/internal_entities_user.User'
        type: array
    type: object
  internal_entities_user.UserCreateRequest:
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: Иван Иванов
        maxLength: 50
        minLength: 2
        type: string
      phone:
        example: "+79124852012"
        type: string
    required:
    - email
    - name
    - phone
    type: object
  internal_entities_user.UserUpdateRequest:
    properties:
      name:
        example: Иван Иванов
        maxLength: 50
        minLength: 2
        type: string
      phone:
        example: "+79124852012"
        type: string
    required:
    - name
    - phone
    type: object
host: localhost:500
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: API для аутентификации через email и телефон
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Mail Phone Auth API
  version: "1.0"
paths:
  /auth/email:
    post:
      consumes:
      - application/json
      description: Отправляет код подтверждения на указанный email адрес
      parameters:
      - description: Email для аутентификации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_entities_auth.AuthEmailRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Успешно создан запрос на аутентификацию
          schema:
            $ref: '#/definitions/internal_entities_auth.Auth'
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать запрос на аутентификацию по email
      tags:
      - auth
  /auth/email/confirm:
    post:
      consumes:
      - application/json
      description: Проверяет код подтверждения из Email и выдает JWT-токены
      parameters:
      - description: Email и код подтверждения
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_entities_auth.AuthEmailConfirmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация
          schema:
            $ref: '#/definitions/internal_entities_auth.AuthResponse'
        "400":
          description: Неверный код или email
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неавторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Подтвердить аутентификацию по email
      tags:
      - auth
  /user:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя в системе
      parameters:
      - description: Данные пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_entities_user.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно создан
          schema:
            $ref: '#/definitions/internal_entities_user.User'
        "400":
          description: Неверные данные
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Пользователь уже существует
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пользователя
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Данные удаленного пользователя
          schema:
            $ref: '#/definitions/internal_entities_user.User'
        "400":
          description: Неверный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера, попробуйте позже
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить пользователя
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Возвращает данные пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Данные пользователя
          schema:
            $ref: '#/definitions/internal_entities_user.User'
        "400":
          description: Неверный ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить пользователя по ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Обновляет данные пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_entities_user.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленные данные пользователя
          schema:
            $ref: '#/definitions/internal_entities_user.User'
        "400":
          description: Неверные данные
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить данные пользователя
      tags:
      - users
  /user/all:
    get:
      consumes:
      - application/json
      description: Возвращает список всех пользователей с пагинацией
      parameters:
      - default: 10
        description: Лимит записей
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            $ref: '#/definitions/internal_entities_user.UserAllResponse'
        "400":
          description: Неверные параметры
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить список пользователей
      tags:
      - users
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
